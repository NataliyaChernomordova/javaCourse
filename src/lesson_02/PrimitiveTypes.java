package lesson_02;

import java.util.Scanner;

public class PrimitiveTypes {
    // точка входа в программу
    public static void main(String[] args) {
        // Типы данных
//        byte a = 10;
//        byte b = 50;
//        int c = a + b;
//        short s = 30000;
//        int i = 1021202112;
//        long l = 123122315154128L;

        // Задача 1. Дано 3 стороны треугольника: a = 60, b = 45, c = 17.
        // Найти перемитр
//        a = 60;
//        b = 45;
//        c = 17;
//        int traingle = a + b + c;
//        System.out.println(traingle);

        //Задача 2. Дано: Есть числа 10, 3 и метод науч. т.
        // Сравнить длину float и double после запятой
//        double d = 10;
//        int e = 3;
//        float f = (float) d / e;
//        double n = (double) d / e;
//        System.out.println(f);
//        System.out.println(n);

        // Задача 3. Коля получил в школе много двоек и решил закопать дневник на 127 м в глубину
        // А потом передумал, вернулся и закопал ещё на 1 м глубже

//        byte deep = 127;
//        byte result = (byte) (deep+1);
//        System.out.println(result);
//
//        char ch = 'a';
//        System.out.println(ch);

        // Задача 4. Дано: 10 красных и 5 зеленых яблок. Верно ли утверждение, что красных яблок больше, чем зеленых

//        int redApple = 10; // Красное яблоко
//        int greenApple = 5;
//
//        boolean k = redApple < greenApple;
//
//        System.out.println(k);
//
//
//         Операторы
        /**Арифметические операторы
         + Складывает значения по обе стороны от оператора
         - Вычитает правый операнд из левого операнда
         * Умножает значения по обе стороны от оператора
         / Оператор деления делит левый операнд на правый операнд
         % Делит левый операнд на правый операнд и возвращает остаток (для определения чётности или нечётности)
         ++ Инкремент - увеличивает значение операнда на 1 х++ постфиксная, ++х префиксная
         -- Декремент - уменьшает значение операнда на 1 х-- постфиксная, --х префиксная
         */

//        int p = 10;
//        int m = 3;
//        int res = p % m; // 10 = (9 / 3) + 1;
//
//
//        p++; // a = a + 1;
//        p--; // a = a - 1;
//        System.out.println(p);

        /**
         Операторы сравнения

         == Проверяет, равны или нет значения двух операндов, если да,
         то условие становится истинным (A == B) – не верны

         != Проверяет, равны или нет значения двух операндов,
         если значения не равны, то условие становится истинным (A != B) – значение истинна

         > Проверяет, является ли значение левого операнда больше,
         чем значение правого операнда, если да, то условие становится истинным (A > B) – не верны

         < Проверяет, является ли значение левого операнда меньше,
         чем значение правого операнда, если да, то условие становится истинным (A < B) – значение истинна

         >= Проверяет, является ли значение левого операнда больше или равно значению правого операнда,
         если да, то условие становится истинным (A >= B) – значение не верны

         <= Проверяет, если значение левого операнда меньше или равно значению правого операнда,
         если да, то условие становится истинным (A <= B) – значение истинна
         * */

//        int a = 5;
//        int b = 5;
//
//        boolean c = a >= b;
//        System.out.println(c);
//
        /**
         Логические операторы

         && Называется логический оператор «И». Если оба операнда являются не равны нулю, то условие становится истинным
         || Называется логический оператор «ИЛИ». Если любой из двух операндов не равен нулю, то условие становится истинным
         ! Называется логический оператор «НЕ». Использование меняет логическое состояние своего операнда.
         Если условие имеет значение true, то оператор логического «НЕ» будет делать false
         * */

//        int w = 1;
//        int x = w++; // w = w + 1;
//        int y = ++w;
//
//
//        System.out.println(x);
//        System.out.println(y);
//        int w;
//
//        w = 1;
//
//        w++;
//
//        int x;
//
//        x = w++;
//
//        int y;
//
//        y = ++w;
//        System.out.println(x);
//        System.out.println(y);

//        char a = 'a';
//        a++;

        // Операторы присвоенния
//         int a = 10;
//         int b = 25;
//         int c = 0;
//         c -= a; // c = c - a;
//         c *= b; // c = c * b;
//        System.out.println();

        boolean a1 = true;
        boolean b1 = false;
        System.out.println(a1 || b1);


//        int a = 5;
//        int b = 6;
//        boolean f = (a > b) || (b >= a);

        boolean d = (!a1 && b1) || (a1 && b1);

        /**
         if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else if (условие) {
         //действие(-я), которые выполняются, если условие истинно;
         }
         else {
         //действие(-я), которые выполняются, если условие истинно;
         }*/

        int a = 25;
        int b = 10;

        if (b > a) {
            System.out.println("b больше a");
        } else if (a == b) {
            System.out.println("a равно b");
        } else {
            System.out.println("a больше b");
        }

//        int rate = -3;
//        if (rate == 5) {
//            System.out.println("Отличник");
//        } else if (rate == 4) {
//            System.out.println("Хорошист");
//        } else if (rate == 3) {
//            System.out.println("Удовлетворительно");
//        } else {
//            System.out.println("Учится плохо");
//        } // проверка ожидаемых значений
        /**

         switch (ВыражениеДляВыбора) {
         case (Значение1):
            Код1;
            break;
         case (Значение2):
            Код2;
            break;
             ...
         case (ЗначениеN):
            КодN;
            break;
         default:
         КодВыбораПоУмолчанию;
         break;
         }
         * */// когда точно знаем какие должны быть значения
//        switch (rate) {
//            case (5):
//                System.out.println("Отличник");
//                break;
//            case (4):
//                System.out.println("Хорошист");
//                break;
//            case (3):
//                System.out.println("Удовлетворительно");
//                break;
//            default:
//                System.out.println("Учится плохо");
//                break;
//
//        }
//        Scanner scanner = new Scanner(System. in);
//        int x = scanner.nextInt();

//        switch (x) {
//            case (1):
//                System.out.println("понедельник");
//                break;
//            case (2):
//                System.out.println("Вторник");
//                break;
//            case (3):
//                System.out.println("Среда");
//                break;
//            case (4):
//                System.out.println("Четверг");
//                break;
//            case (5):
//                System.out.println("пятица");
//                break;
//            case (6):
//                System.out.println("Суббота");
//                break;
//            case (7):
//                System.out.println("Воскресенье");
//                break;
//            default:
//                System.out.println("Нет такого дня недели");
//        }
        // Заача 1.Нужно проверить, попадает ли число, которое мы подаем в консоль от 100 до 150
        Scanner scanner = new Scanner(System.in);
//        int x = scanner.nextInt();
//        if (x >= 100 && x <= 150) {
//            System.out.println("Число попадает в диапозон");
//        } else {
//            System.out.println("Что-то пошло не так");
//        }
        int x = scanner.nextInt();
        if (x <= 100 ) {
            System.out.println("Число ниже 100");
        } else if (x <= 150) {
            System.out.println("Число больше 150");
        } else {
            System.out.println("Число попадает в диапозон");
        }
    }

}